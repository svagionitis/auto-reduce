uid0.patch - remove uid from struct cred, and related macros

use the value 0 in place of cred->uid

Fixup one difficult-to-parse location in fs/fcntl.c

---
diff --git a/include/linux/cred.h b/include/linux/cred.h
index ebbed2c..7918034 100644
--- a/include/linux/cred.h
+++ b/include/linux/cred.h
@@ -123,7 +123,7 @@ struct cred {
 #define CRED_MAGIC	0x43736564
 #define CRED_MAGIC_DEAD	0x44656144
 #endif
-	kuid_t		uid;		/* real UID of the task */
+//	kuid_t		uid;		/* real UID of the task */
 	kgid_t		gid;		/* real GID of the task */
 	kuid_t		suid;		/* saved UID of the task */
 	kgid_t		sgid;		/* saved GID of the task */
@@ -334,7 +334,7 @@ static inline void put_cred(const struct cred *_cred)
 	___val;						\
 })
 
-#define task_uid(task)		(task_cred_xxx((task), uid))
+#define task_uid(task)		/* (task_cred_xxx((task), uid)) */ 0
 #define task_euid(task)		(task_cred_xxx((task), euid))
 
 #define current_cred_xxx(xxx)			\
@@ -342,7 +342,7 @@ static inline void put_cred(const struct cred *_cred)
 	current_cred()->xxx;			\
 })
 
-#define current_uid()		(current_cred_xxx(uid))
+#define current_uid()		/* (current_cred_xxx(uid)) */ 0
 #define current_gid()		(current_cred_xxx(gid))
 #define current_euid()		(current_cred_xxx(euid))
 #define current_egid()		(current_cred_xxx(egid))
diff --git a/fs/fcntl.c b/fs/fcntl.c
index 81b70e6..f36014c 100644
--- a/fs/fcntl.c
+++ b/fs/fcntl.c
@@ -208,7 +208,7 @@ static void f_modown(struct file *filp, struct pid *pid, enum pid_type type,
 
 		if (pid) {
 			const struct cred *cred = current_cred();
-			filp->f_owner.uid = cred->uid;
+			filp->f_owner.uid = 0;
 			filp->f_owner.euid = cred->euid;
 		}
 	}
@@ -526,7 +526,7 @@ static inline int sigio_perm(struct task_struct *p,
 	cred = __task_cred(p);
 	ret = ((uid_eq(fown->euid, GLOBAL_ROOT_UID) ||
 		uid_eq(fown->euid, cred->suid) || uid_eq(fown->euid, cred->uid) ||
-		uid_eq(fown->uid,  cred->suid) || uid_eq(fown->uid,  cred->uid)) &&
+		uid_eq(fown->uid,  cred->suid) || uid_eq(fown->uid,  /*cred->uid_*/ 0)) &&
 	       !security_file_send_sigiotask(p, fown, sig));
 	rcu_read_unlock();
 	return ret;
